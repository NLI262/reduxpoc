{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/poc/src/Show.js\";\nimport React from 'react';\nexport default class Show extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" Name: \", item.name, \" | Email :\", item.email)), \";\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" city: \", item.city, \" | Zipcode :\", item.zipcode)), \";\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/poc/src/Show.js"],"names":["React","Show","Component","constructor","props","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render","map","item","id","name","email","address","city","zipcode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CACH;AACZC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KAAX;AAKH;;AAEDC,EAAAA,iBAAiB,GACjB;AAEIC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACb,WAAKC,QAAL,CAAc;AACPN,QAAAA,QAAQ,EAAC,IADF;AAEPD,QAAAA,KAAK,EAAEM;AAFA,OAAd;AAKY,KARb;AASH;;AACEE,EAAAA,MAAM,GACT;AAAA,sBAC0B,KAAKT,KAD/B;AAAA,QACOE,QADP,eACOA,QADP;AAAA,QACiBD,KADjB,eACiBA,KADjB;;AAEC,QAAG,CAACC,QAAJ,EAAa;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AAEH,KAHD,MAIG;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACS,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0BD,IAAI,CAACE,IAA/B,gBAAgDF,IAAI,CAACG,KAArD,CADH,CADL,MADI,EAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCb,KAAK,CAACS,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACI,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+BJ,IAAI,CAACK,IAApC,kBAAuDL,IAAI,CAACM,OAA5D,CADH,CADD,MAPQ,CADJ;AAmBH;AAEA;;AArDW","sourcesContent":["import React from 'react';\nexport default class Show extends React.Component\n            {\nconstructor(props)\n{\n    super(props);\n    this.state={\n        items:[],\n        isLoaded: false,\n\n    }\n}\n   \ncomponentDidMount()\n{\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=>res.json())\n    .then(json => { \n     this.setState({\n            isLoaded:true,\n            items: json,\n                    })\n\n                });\n}\n   render()\n{\n var { isLoaded, items} = this.state;\n if(!isLoaded){\n     return (<div>loading...</div>);\n\n }\nelse{\n    return (\n        <div>\n    <ul>\n        {items.map(item => ( \n            <li key={item.id}> Name: {item.name } | Email :{item.email}</li>\n        )) };\n    </ul>\n\n<ul>\n{items.map(item => ( \n    <li key={item.address}> city: {item.city } | Zipcode :{item.zipcode}\n    </li>\n)) };\n</ul>\n</div>\n\n    \n    );\n\n}\n\n}\n\n}"]},"metadata":{},"sourceType":"module"}